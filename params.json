{
  "name": "Anyserver",
  "tagline": "anyserver is to make some kinds of server, for example websocket server, http, inet domain and unix domain server.",
  "body": "# What is anyserver?\r\nanyserver is a component library to support intercommunication between local processes and also remote. <br>\r\nLike websocket, http, inet domain for external communication and also unix domain server for IPC.\r\n\r\n# Architecture\r\n## - Block Diagram \r\n![alt tag](https://github.com/tehokang/anyserver/blob/master/anyserver_block_diagram.png)\r\n## - Class Diagram \r\n![alt tag](https://github.com/tehokang/anyserver/blob/master/anyserver_class_diagram.png)\r\n\r\n# How to configure\r\n- anyserver can configure via anyserver.json that you can choose servers to launch with specific information.\r\n- The json config file for example can deploy in build/out after make building.\r\n- Link sample : https://github.com/tehokang/anyserver/blob/master/anyserver/src/anyserver.json\r\n\r\n# How to build\r\nAt first, there are resources like below after clone.\r\n<pre>\r\n.\r\n├── CMakeLists.txt\r\n├── LICENSE\r\n├── README.md\r\n├── anyserver\r\n├── anyserver_class_diagram.png\r\n├── build (user who want to build has to make directory 'build')\r\n├── doc\r\n├── example\r\n└── port\r\n</pre>\r\n\r\n1. Create build directory\r\n<pre>\r\n#mkdir build\r\n#cd build\r\n</pre>\r\n2. Build as debug\r\n<pre><code>\r\n#cmake .. -Dbuild=debug \r\n</code></pre>\r\n3. Build as release\r\n<pre><code>\r\n#cmake .. -Dbuild=release\r\n</code></pre>\r\n4. Example executable and anyserver library deploy in build/out\r\n<pre>\r\n#cd build/out\r\n#./example anyserver.json\r\n</pre>\r\n\r\n# How to port this library\r\n- Update (ASAP) \r\n\r\n# External Dependencies\r\njsoncpp 1.7.4 for codec of json <br>\r\nlibwebsockets 2.0.0 for http and websocket server <br>\r\nlibmicrohttpd 1.9.30-1 for backup of http <br>\r\ntoolchain : g++ 4.8.2-19Ubuntu1\r\n\r\n# Example\r\n<pre>\r\n#mkdir build\r\n#cd build\r\n#make\r\n#cd out\r\n#./example anyserver.json\r\n</pre>\r\n\r\n# TODO\r\n- ~~HTTP and Websocket server are using same library(libwebsockets), they are sharing same context, it has to be seperated via another reference like http server of microhttpd~~ : libwebsockets context can be multiple but it couldn't make multiple openssl context at security mode like wss, https.\r\n- ~~SSL test~~ (Especially, wss) : complete to support security of only one of servers at runtime\r\n- Ready for portaility example\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}